networks:
    backend:
        driver: bridge

services:
    app:
        build:
            context: ./docker/octane
            args:
                - PUID=${APP_PUID}
                - PGID=${APP_PGID}
                - APP_ENV=${APP_ENV}

        restart: unless-stopped
        tty: true
        depends_on:
            - maindb
            - redisdb
        volumes:
            - ./docker/octane/php.ini:/usr/local/etc/php.ini
            - ./docker/octane/supervisord.d:/etc/supervisor/supervisord.d
            - ./:/var/www/html:cached
        networks:
            - backend

    nginx:
        build:
            context: ./docker/nginx
        restart: unless-stopped
        ports:
            - "${NGINX_HOST_HTTP_PORT}:80"
        environment:
            - NGINX_HOST=${NGINX_HOST}
        depends_on:
            - app
        volumes:
            - ./:/var/www/html:cached
            - ./storage/logs/nginx:/var/log/nginx
        networks:
            - backend

    maindb:
        build:
            context: ./docker/postgres
        restart: unless-stopped
        volumes:
            - ./docker/data/postgres:/var/lib/postgresql/data
            - ./docker/postgres/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.data
        ports:
            - "${DB_PORT}:5432"
        environment:
            - POSTGRES_DB=${DB_DATABASE}
            - POSTGRES_USER=${DB_USERNAME}
            - POSTGRES_PASSWORD=${DB_PASSWORD}
        networks:
            - backend

    redisdb:
        image: redis:7.0.7-alpine
        restart: unless-stopped
        volumes:
            - ./docker/data/redis:/data
        networks:
            - backend

    worker:
        build:
            context: ./docker/worker
            args:
                - PUID=${APP_PUID}
                - PGID=${APP_PGID}
        restart: unless-stopped
        volumes:
            - ./:/var/www/html:cached
            - ./docker/worker/supervisord.d:/etc/supervisor/supervisord.d
        networks:
            - backend

